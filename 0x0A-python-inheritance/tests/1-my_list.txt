>>> MyList = __import__('1-my_list').MyList
>>> m =  MyList()
>>> m is list
False
>>> m =  MyList()
>>> isinstance(m,list)
True
>>> m =  MyList()
>>> type(m)
<class '1-my_list.MyList'>
>>> m =  MyList()
>>> m.__str__
<method-wrapper '__str__' of MyList object at 0x7f7b825a7db0>
>>> m =  MyList()
>>> m.append(3)
>>> m.append(5)
>>> m.append(1)
>>> m.append(2)
>>> m.print_sorted()
[1, 2, 3, 5]
>>> m = MyList()
>>> m.append(-1)
>>> m.append(-10)
>>> m.append(-3)
>>> m.append(-5)
>>> m.print_sorted()
[-10, -5, -3, -1]
>>> m = MyList()
>>> print(m)
[]
>>> type(MyList.__dict__['print_sorted'])
<class 'function'>
>>> m = MyList()
>>> m.__class__.print_sorted()
Traceback (most recent call last):
...
TypeError: MyList.print_sorted() missing 1 required positional argument: 'self'
