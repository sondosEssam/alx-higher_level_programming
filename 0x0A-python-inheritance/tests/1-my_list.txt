>>> MyList = __import__('1-my_list').MyList
>>> ml = MyList()
>>> type(ml) == MyList
True
>>> ml = MyList()
>>> isinstance(ml, list)
True
>>> type(ml) == list
False
>>> ml = MyList()
>>> ml.print_sorted()
[]
>>> type(MyList.__dict__['print_sorted'])
<class 'function'>
>>> ml.__class__.print_sorted()
Traceback (most recent call last):
...
TypeError: print_sorted() missing 1 required positional argument: 'self'
>>> ml.print_sorted([4, 2, 5])
Traceback (most recent call last):
...
TypeError: print_sorted() takes 1 positional argument but 2 were given
>>> ml = MyList([2, 10, 1])
>>> ml.print_sorted()
[1, 2, 10]
>>> ml = MyList([-1000, -98, -232565, 0, -23423434, -123])
>>> ml.print_sorted()
[-23423434, -232565, -1000, -123, -98, 0]
>>> ml = MyList([2, 10, 1, -10, 20, 100, 0])
>>> ml.print_sorted()
[-10, 0, 1, 2, 10, 20, 100]
>>> ml
[2, 10, 1, -10, 20, 100, 0]
>>> ml = MyList([-10, 0, 1, 2, 10, 20, 100])
>>> ml.print_sorted()
[-10, 0, 1, 2, 10, 20, 100]
>>> ml = MyList()
>>> ml.append(27)
>>> ml.print_sorted()
[27]
